{"version":3,"file":"static/js/346.b5219192.chunk.js","mappings":"+PACA,EAA6B,gCAA7B,EAA0E,gCAA1E,EAAyH,kC,SCmDzH,EA9CoB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMV,GAAN,uFAEnBM,GAAa,GAFM,UAIGK,EAAAA,EAAAA,IAAgBX,GAJnB,OAIbY,EAJa,OAKnBR,EAAgBQ,EAAQC,SALL,gDAOnBL,EAAS,KAAIM,SAPM,yBASnBR,GAAa,GATM,4EAAH,sDAapBI,EAAeV,EAEhB,GAAE,CAACA,KAGF,+BACGO,EAAMQ,OAAS,IAAK,wDAAgCR,KACpDF,IAAa,SAACW,EAAA,EAAD,IACbb,EAAaY,OACZZ,EAAac,KAAI,SAAAC,GACf,OACE,gBAAIC,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,qBAAuCF,EAAOG,OAA9C,QACA,uBAAIH,EAAOI,YAFuBJ,EAAOK,GAK9C,KAED,cAAGJ,UAAWC,EAAd,uDAMP,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authorName\":\"ReviewsPage_authorName__5GZAR\",\"reviewItem\":\"ReviewsPage_reviewItem__kez-t\",\"notification\":\"ReviewsPage_notification__39Ut0\"};","import Loader from 'components/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport css from './ReviewsPage.module.css';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchMovieCast = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const reviews = await getMovieReviews(movieId);\n        setMovieReviews(reviews.results);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast(movieId);\n    // eslint-disable-next-line\n  }, [movieId]);\n\n  return (\n    <section>\n      {error.length > 0 && <p>Upss, Some error occured... {error}</p>}\n      {isLoading && <Loader />}\n      {movieReviews.length ? (\n        movieReviews.map(review => {\n          return (\n            <li className={css.reviewItem} key={review.id}>\n              <p className={css.authorName}>Author: {review.author} </p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p className={css.notification}>\n          We dont have any reviews for this movie\n        </p>\n      )}\n    </section>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","useEffect","fetchMovieCast","getMovieReviews","reviews","results","message","length","Loader","map","review","className","css","author","content","id"],"sourceRoot":""}